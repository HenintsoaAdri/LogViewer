package adri.logviewermain.interceptor;

import java.util.Map;

import com.opensymphony.xwork2.ActionContext;
import com.opensymphony.xwork2.ActionInvocation;
import com.opensymphony.xwork2.interceptor.AbstractInterceptor;

import adri.logviewermain.action.BaseAction;
import adri.logviewermain.model.Utilisateur;


public class PermissionInterceptor extends AbstractInterceptor{

	@Override
	public String intercept(ActionInvocation invocation) throws Exception {
		Map<String, Object> session = ActionContext.getContext().getSession();
		Utilisateur user = (Utilisateur)session.get("user");
		BaseAction action = (BaseAction)invocation.getAction();
		boolean authorization = false;
		switch(action.getClasse()){
			case "adri.logviewermain.model.Agent": authorization = user.isGenerallyAllowed("Agent");break;
			case "adri.logviewermain.model.Profil": authorization = user.isGenerallyAllowed("Profil");break;
			case "adri.logviewermain.model.Groupe": authorization = user.isGenerallyAllowed("Groupe");break;
			case "adri.logviewermain.model.Utilisateur": authorization = user.isGenerallyAllowed("Utilisateur");break;
			default: return "permission";
		}
		if(authorization){
			return invocation.invoke();
		}
		return "permission";
	}
	
}
