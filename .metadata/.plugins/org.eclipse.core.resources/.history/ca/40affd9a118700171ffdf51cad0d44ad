package adri.logviewer.agent.server;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.charset.Charset;

import javax.net.ssl.SSLContext;

import org.apache.mina.core.service.IoAcceptor;
import org.apache.mina.core.session.IdleStatus;
import org.apache.mina.filter.codec.ProtocolCodecFilter;
import org.apache.mina.filter.codec.serialization.ObjectSerializationEncoder;
import org.apache.mina.filter.codec.textline.TextLineDecoder;
import org.apache.mina.filter.logging.LoggingFilter;
import org.apache.mina.filter.ssl.SslFilter;
import org.apache.mina.transport.socket.nio.NioSocketAcceptor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MinaAgentServer{

    private final Logger LOGGER = LoggerFactory.getLogger(getClass());
	private int port = 2008;
	private IoAcceptor server;
	private SSLContext sslContext;
	
	public static void main(String[] args) throws IOException{
		  MinaAgentServer app = new MinaAgentServer(0);
		  app.start();
		  app.LOGGER.trace("Server started...");
	}
	
	public MinaAgentServer(int port){
		try {
			setPort(port);
			setSslContext(createSSLContext());
			setServer(createServer());
		} catch (Exception e) {
			LOGGER.error("Erreur d'initialisation", e);
		}
	}

	public IoAcceptor getServer() {
		return server;
	}
	public void setServer(IoAcceptor server) {
		this.server = server;
	}

	public SSLContext getSslContext() {
		return sslContext;
	}
	public void setSslContext(SSLContext sslContext) {
		this.sslContext = sslContext;
	}
	public SSLContext createSSLContext() throws Exception{
		SSLContext context = null;
		try {
			context = SSLContext.getInstance("TLS");
			context.init(null, null, null);
			return context;
		} catch (Exception e) {
			LOGGER.error("Erreur initialisation du context SSL", e);
			throw e;
		}
	}
	
	public int getPort() {
		return port;
	}
	public void setPort(int port) {
		if(port > 0){
			this.port = port;
		}else{
			LOGGER.warn("Port invalide : " + port);
			LOGGER.warn("AutoSet Port : " + getPort());
		}
	}
	public void start() throws IOException{
		getServer().bind( new InetSocketAddress(getPort()) );
	}
	public IoAcceptor createServer() throws IOException{
		  IoAcceptor acceptor = new NioSocketAcceptor();
		  
		  acceptor.getFilterChain().addLast( "sslFilter", new SslFilter(getSslContext()) );
		  acceptor.getFilterChain().addLast( "logger", new LoggingFilter() );
	      acceptor.getFilterChain().addLast( "codec", new ProtocolCodecFilter(new ObjectSerializationEncoder(), new TextLineDecoder(Charset.forName("UTF-8"))));
	      acceptor.setHandler(new MinaAgentHandler());
	      acceptor.getSessionConfig().setReadBufferSize(2048);
	      acceptor.getSessionConfig().setIdleTime(IdleStatus.BOTH_IDLE, 30);
	      System.out.println(LOGGER.getName());
	      return acceptor;
	}
}
