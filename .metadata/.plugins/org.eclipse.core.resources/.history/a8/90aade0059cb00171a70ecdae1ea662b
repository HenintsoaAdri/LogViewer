<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<filter-def name="searchUtilisateur">
    	<filter-param name="nom" type="string"/>
    	<filter-param name="poste" type="string"/>
    	<filter-param name="sexe" type="string"/>
	</filter-def>
    <class name="adri.logviewer.model.Utilisateur" table="utilisateur" dynamic-update="true">
        <meta attribute="class-description">
            This class contains the utilisateur detail.
        </meta>
        <id name="id" type="int" column="idutilisateur">
            <generator class="increment"/>
        </id>
        <property name="nom" column="nomutilisateur" type="string"/>
        <property name="prenom" column="prenomutilisateur" type="string"/>
        <property name="sexe" column="sexeutilisateur" type="char"/>
        <property name="password" column="passwordutilisateur" type="string"/>
        <property unique="true" name="email" column="emailutilisateur" type="string"/>
        <property name="poste" column="posteutilisateur" type="string"/>
        <property name="superUtilisateur" column="issuperutilisateur" type="boolean" update="false" insert="false"/>
        <property name="reinitPassword" column="reinitpassutilisateur" type="boolean"/>
        <property name="lastLogged" column="lastloggedutilisateur" type="timestamp"/>
        <many-to-one name="profil" class="adri.logviewer.model.Profil" column="idprofil" lazy="false" not-null="false" fetch="select"/>
	    <union-subclass name="adri.logviewer.model.UtilisateurView" table="utilisateurview"/>
        <union-subclass name="adri.logviewer.model.UtilisateurStat" table="utilisateurstat" >
        	<property name="nombre" column="nombre" type="int" />
        	<property name="valeur" column="valeur" type="float" />
        </union-subclass>	    
        <filter name="searchUtilisateur" condition="(LOWER(nomutilisateur) like :nom or LOWER(prenomutilisateur) like :nom or LOWER(emailutilisateur) like :nom)"/>
        <filter name="searchUtilisateur" condition="LOWER(posteutilisateur) like :poste" />
        <filter name="searchUtilisateur" condition="LOWER(sexeutilisateur) like :sexe" />
    </class>
</hibernate-mapping>