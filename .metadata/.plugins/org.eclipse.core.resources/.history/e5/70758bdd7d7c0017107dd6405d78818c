package adri.logviewermain.filemanager;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;

public class Log {
	private Date date;
	private String classe = "";
	private String method = "";
	private String message = "";
	private String priority = "";
	private String thread = "";
	private String details = "";
	
	public Log(Matcher m, String datePattern) throws Exception{
		setDate(m,datePattern);
		setClasse(m.group("CLASS"));
		setMethod(m.group("METHOD"));
		setPriority(m.group("LEVEL"));
		setThread(m.group("THREAD"));
		setMessage(m.group("MESSAGE"));
	}
	private void setDate(Matcher m, String datePattern) throws Exception {
		try {
			setDate(m.group("TIMESTAMP"), datePattern);
		} catch (IllegalArgumentException e) {
			// TODO: handle exception
		}
		
	}
	public Date getDate() {
		return date;
	}
	public void setDate(Date date) {
		this.date = date;
	}
	public void setDate(String string, String pattern) throws ParseException {
		if(pattern != null){
			this.setDate(new SimpleDateFormat(pattern).parse(string));
		}else{
			this.setDate(string);
		}
	}
	public void setDate(String string) throws ParseException {
		this.setDate(new SimpleDateFormat().parse(string));
	}
	
	public String getClasse() {
		return classe;
	}
	public void setClasse(String classe) {
		this.classe = classe;
	}
	
	public String getMethod() {
		return method;
	}
	public void setMethod(String method) {
		this.method = method;
	}
	public String getMessage() {
		return message;
	}
	public void setMessage(String message) {
		this.message = message;
	}
	
	public String getPriority() {
		return priority;
	}
	public void setPriority(String priority) {
		this.priority = priority;
	}
	
	public String getThread() {
		return thread;
	}
	public void setThread(String thread) {
		this.thread = thread;
	}
	
	public String getDetails() {
		return details;
	}
	public void setDetails(String details) {
		this.details = details;
	}
	public void addDetails(String details){
		if(details != null && !details.isEmpty()){
			this.details += " \n ";
			this.details += details;
		}
	}
	@Override
	public String toString() {
		return "[ date : "
				+ getDate().toString()
				+ " - priorité : "
				+ getPriority()
				+ " - thread : "
				+ getThread()
				+ " - classe : "
				+ getClasse()
				+ " - methode : "
				+ getMethod()
				+ " - message : "
				+ getMessage()
				+ " - "
				+ getDetails()
				+" ]\n";
	}
	
}
