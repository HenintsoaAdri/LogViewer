package adri.logviewer.agent.mock;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.*;
import java.util.List;

import adri.logviewer.agent.file.LogFile;
import adri.logviewer.agent.file.LogFileSearcher;

public class Serveur {

	public static void main(String[] zero){
		
		ServerSocket socket;
		try {
		socket = new ServerSocket(2009);
		Thread t = new Thread(new ThreadClient(socket));
		t.start();
		System.out.println("Attente de connexion");
		
		} catch (IOException e) {
			
			e.printStackTrace();
		}
	}
}

class ThreadClient implements Runnable {
	   private ServerSocket socketserver;
	   private Socket socket;
	   public ThreadClient(ServerSocket s){
		   socketserver = s;
	   }
		
		public void run(){
			BufferedReader read = null;
	        try {
	        	while(true){
	        		socket = socketserver.accept();
			  		System.out.println("Nouvelle Requete");
			        BufferedReader in = new BufferedReader (new InputStreamReader (socket.getInputStream()));
			        String dossier = in.readLine();
			        System.out.println("dossier = " + dossier);
			  		List<byte[]> reponse =  LogFileSearcher.getInstance().search(dossier);
			  		for(byte[] f : reponse){
			  			PrintWriter writer = new PrintWriter(socket.getOutputStream());
				  		writer.write(f+"\n");
			  			writer.flush();
			  		}
	                socket.close();
	        	}
	        
	        } catch (IOException e) {
				e.printStackTrace();
			} catch (Exception e) {
				e.printStackTrace();
			}finally{
				if(read != null){
					try {
						read.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
		}

	}
