/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2017-11-05 12:36:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.time.Year;
import java.util.Locale;
import java.time.format.TextStyle;
import java.time.Month;
import adri.logviewer.model.StatActivite;
import adri.logviewer.util.DatePart;

public final class statActivite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("adri.logviewer.model.StatActivite");
    _jspx_imports_classes.add("java.time.Year");
    _jspx_imports_classes.add("java.time.format.TextStyle");
    _jspx_imports_classes.add("java.time.Month");
    _jspx_imports_classes.add("adri.logviewer.util.DatePart");
    _jspx_imports_classes.add("java.util.Locale");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 StatActivite stat = (StatActivite)request.getAttribute("stat"); 
      out.write("\r\n");
      out.write("<div id=\"ActiviteStat\" style=\"height:90vh\">\r\n");
      out.write("<a class=\"btn btn-info btn-outline\" data-toggle=\"collapse\" href=\"#filter\"><i class=\"fa fa-filter fq-fw\"></i>Filtrer</a>\r\n");
      out.write("<div id=\"filter\" class=\"collapse\">\r\n");
      out.write("<hr>\r\n");
      out.write("  <form class=\"form-horizontal form-material\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Utilisateur/save\" method=\"post\">\r\n");
      out.write("  \t<div class=\"row\">\r\n");
      out.write("    \t<div class=\"form-group col-md-3\">\r\n");
      out.write("            <label class=\"col-md-12\">Année</label>\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("                <input id=\"annee\" name=\"stat.annee\" value=\"");
 out.print(stat.getAnnee()); 
      out.write("\" type=\"number\" min=\"0\" max=\"");
 out.print(Year.now().getValue()); 
      out.write("\" placeholder=\"Année\" class=\"form-control form-control-line\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("         </div>\r\n");
      out.write("        <div class=\"form-group col-md-3\">\r\n");
      out.write("            <label class=\"col-sm-12\">Mois</label>\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <select id=\"mois\" name=\"stat.mois\" class=\"form-control form-control-line\">\r\n");
      out.write("            \t\t");
 for(Month i : Month.values()){ 
      out.write("\r\n");
      out.write("            \t\t<option value=\"");
 out.print(i.getValue()); 
      out.write('"');
      out.write(' ');
 out.print(stat.getMois() == i.getValue()?"selected":""); 
      out.write('>');
 out.print(i.getDisplayName(TextStyle.FULL, Locale.getDefault())); 
      out.write("</option>\r\n");
      out.write("            \t\t");
 } 
      out.write("\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group col-md-3\">\r\n");
      out.write("            <label class=\"col-sm-12\">Grouper</label>\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <select id=\"by\" name=\"stat.by\" class=\"form-control form-control-line\">\r\n");
      out.write("            \t\t");
 for(DatePart i : DatePart.values()){ 
      out.write("\r\n");
      out.write("            \t\t<option value=\"");
 out.print(i.name()); 
      out.write('"');
      out.write(' ');
 out.print(stat.getBy().equals(i)?"selected":""); 
      out.write('>');
 out.print(i.getLabel()); 
      out.write("</option>\r\n");
      out.write("            \t\t");
 } 
      out.write("\r\n");
      out.write("                </select>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"form-group col-md-3\">\r\n");
      out.write("            <div class=\"col-sm-12\">\r\n");
      out.write("                <button class=\"btn btn-success\" type=\"button\" id=\"submitFilter\">Filtrer</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  </form>\r\n");
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("<div id=\"statActivite\">\r\n");
 out.print(stat.getJSON()); 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(\"#submitFilter\").on(\"click\",function(){\r\n");
      out.write("    $('#ActiviteStat').load(url + '/Includes/Loader');\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("        url : url + '/Includes/statActivite',\r\n");
      out.write("        type : 'GET',\r\n");
      out.write("        data : 'stat.annee='+$('#annee').val()+'&stat.mois='+$('#mois').val()+'&stat.by='+$('#by').val(),\r\n");
      out.write("        success : function(html, statut){\r\n");
      out.write("            if(html){\r\n");
      out.write("                $('#ActiviteStat').replaceWith(html);\r\n");
      out.write("                eval('.script');\r\n");
      out.write("            }else{\r\n");
      out.write("                $('#ActiviteStat').load(url + '/Includes/Loader');\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        error : function(resultat, statut, erreur){\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\" class=\"script\">\r\n");
      out.write("$(\"#statActivite\").CanvasJSChart({\r\n");
      out.write("\ttitle:{\r\n");
      out.write("\t\ttext: \"Statistique d'activité\"\r\n");
      out.write("\t},\r\n");
      out.write("\tdata: [{\r\n");
      out.write("\t\ttype: \"line\",\r\n");
      out.write("\t\tdataPoints: ");
 out.print(stat.getJSON()); 
      out.write("\r\n");
      out.write("\t}]\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
