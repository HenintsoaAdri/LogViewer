/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2017-09-01 13:55:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.includes;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import adri.logviewermain.model.GroupeView;
import adri.logviewermain.model.BaseModel;
import adri.logviewermain.model.BaseModelPagination;

public final class detailGroupe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("adri.logviewermain.model.GroupeView");
    _jspx_imports_classes.add("adri.logviewermain.model.BaseModelPagination");
    _jspx_imports_classes.add("adri.logviewermain.model.BaseModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 BaseModelPagination pagination = (BaseModelPagination)request.getAttribute("pagination"); 
	BaseModel item = (BaseModel)request.getAttribute("item"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
 out.print(item.instance()); 
      out.write("/edit/");
 out.print(item.getId()); 
      out.write("\" class=\"btn btn-info pull-right m-l-20 waves-effect waves-light\"><i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>Ajouter</a>\r\n");
      out.write("  \t");
 if(pagination == null || pagination.getListe() == null || pagination.getListe().isEmpty() ){ 
      out.write("\r\n");
      out.write("      <p class=\"text-danger\">Aucun groupe dans cette entit√©</p>\r\n");
      out.write("  \t");

  	}else{ 
      out.write("\r\n");
      out.write("  <div class=\"col-md-12\">\r\n");
      out.write("     <div class=\"table-responsive\">\r\n");
      out.write("         <table class=\"table\">\r\n");
      out.write("             <thead>\r\n");
      out.write("                 <tr>\r\n");
      out.write("                     <th>#</th>\r\n");
      out.write("                     <th>Nom</th>\r\n");
      out.write("                     <th>Description</th>\r\n");
      out.write("                     <th>Nombre d'agent</th>\r\n");
      out.write("                     <th></th>\r\n");
      out.write("                 </tr>\r\n");
      out.write("             </thead>\r\n");
      out.write("             <tbody>\r\n");
      out.write("  \t");
	for(BaseModel base : pagination.getListe()){ 
    		GroupeView i = (GroupeView)base;
    	
      out.write("\r\n");
      out.write("\t\t        <tr>\r\n");
      out.write("\t\t            <td>");
 out.print(i.getId()); 
      out.write("</td>\r\n");
      out.write("\t\t            <td>");
 out.print(i.getNom()); 
      out.write("</td>\r\n");
      out.write("\t\t            <td>");
 out.print(i.getDescription()); 
      out.write("</td>\r\n");
      out.write("\t\t            <td>");
 out.print(i.getNombreAgent()); 
      out.write("</td>\r\n");
      out.write("\t\t            <td><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/Groupe/");
 out.print(i.getId()); 
      out.write("\" class=\"btn btn-primary m-l-20 waves-effect waves-light\"><i class=\"fa fa-chevron-right fa-fw\" aria-hidden=\"true\"></i>Voir le groupe</a></td>\r\n");
      out.write("\t\t        </tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("             </tbody>\r\n");
      out.write("         </table>\r\n");
      out.write("     </div>\r\n");
      out.write(" </div>\r\n");
      out.write("\t");
 if(pagination.getNombrePage()>1){
      out.write("\r\n");
      out.write("        <ul class=\"pagination\">\r\n");
      out.write("        ");
 for(int i=0; i<pagination.getNombrePage(); i++){ 
      out.write("\r\n");
      out.write("\t\t  <li ");
 if(pagination.getPage() == i)out.print("class=\"active\""); 
      out.write("><a href=\"?item.id=");
 out.print(item.getId()); 
      out.write("&page=");
 out.print(i+1); 
      out.write('"');
      out.write('>');
 out.print(i+1); 
      out.write("</a></li>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("  ");
  }
	} 
      out.write("\r\n");
      out.write(" <div class=\"clearfix\"></div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
